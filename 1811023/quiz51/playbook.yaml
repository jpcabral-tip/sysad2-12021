---
  - name: Install Containerized ELK Stack (Docker)
    hosts: elk
    
    tasks:
    - name: Include variables from config.yaml
      include_vars:
        file: config.yaml

    - name: Install Docker dependencies using installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        filename: ""
        package:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
          - python3
          - python3-pip
        service: ""
      when: ansible_facts['os_family'] == 'Debian' 

    - name: Install Docker using installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
        filename: "docker-ce"
        package:
          - docker-ce
          - docker-ce-cli
          - containerd.io 
        service: docker
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Docker using installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        src: "{{ docker_repo }}"
        dest: "/etc/yum.repos.d/docker-ce.repo"
        package:
          - docker-ce
          - python3
          - python3-pip
        service: docker
      when: ansible_facts['os_family'] == 'RedHat'
    
    - name: Stop firewall using stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Debian'  

    - name: Stop firewall using stop firewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Pip install docker Python modules
      include_role:
        name: pipinstall
      vars:
        pippackage: docker

    - name: Pull ELK Images
      include_role:
        name: pullimage
      vars:
        image: "{{ item }}"
      loop:
        - "{{ elasticsearch_image }}"
        - "{{ logstash_image }}"
        - "{{ kibana_image }}"

    - name: Setup and configure Elastic Stack
      include_role:
        name: elk_setup
